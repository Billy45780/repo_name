// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
let form = null;
let submitBtn = null;
let successMsg = null;

// –ö—ç—à–∏—Ä—É–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã
function initForm() {
    form = document.getElementById('registrationForm');
    submitBtn = document.getElementById('submitBtn');
    successMsg = document.getElementById('successMessage');
    
    if (!form) {
        console.log('–§–æ—Ä–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        return;
    }
    
    // –ù–∞–≤–µ—à–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    form.addEventListener('submit', handleFormSubmit);
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞ –ª–µ—Ç—É
    const nameInput = document.getElementById('fullName');
    const emailInput = document.getElementById('email');
    const phoneInput = document.getElementById('phone');
    const passwordInput = document.getElementById('password');
    const confirmInput = document.getElementById('confirmPassword');
    const birthInput = document.getElementById('birthDate');
    
    if (nameInput) nameInput.addEventListener('input', validateName);
    if (emailInput) emailInput.addEventListener('input', validateEmail);
    if (phoneInput) phoneInput.addEventListener('input', validatePhone);
    if (passwordInput) {
        passwordInput.addEventListener('input', function() {
            validatePassword();
            updatePassMeter();
        });
    }
    if (confirmInput) confirmInput.addEventListener('input', validateConfirmPass);
    if (birthInput) birthInput.addEventListener('change', validateBirthDate);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–∞–¥–∏–æ –∏ —á–µ–∫–±–æ–∫—Å–æ–≤
    const courseRadios = document.querySelectorAll('input[name="course"]');
    courseRadios.forEach(radio => {
        radio.addEventListener('change', validateCourse);
    });
    
    const agreeCheckbox = document.querySelector('input[name="agreement"]');
    if (agreeCheckbox) {
        agreeCheckbox.addEventListener('change', validateAgreement);
    }
    
    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª—è
    setupPassToggle();
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    if (phoneInput) {
        phoneInput.addEventListener('input', formatPhoneInput);
    }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
function handleFormSubmit(e) {
    e.preventDefault();
    
    const isValid = checkAllFields();
    
    if (isValid) {
        showSuccessState();
        disableForm();
        
        // –≠–º—É–ª—è—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        setTimeout(() => {
            form.reset();
            resetFormState();
        }, 2500);
    } else {
        focusErrorField();
    }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –ø–æ–ª–µ–π
function checkAllFields() {
    return validateName() && 
           validateEmail() && 
           validatePhone() && 
           validatePassword() && 
           validateConfirmPass() && 
           validateCourse() && 
           validateBirthDate() && 
           validateAgreement();
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è –∏–º–µ–Ω–∏
function validateName() {
    const input = document.getElementById('fullName');
    const error = document.getElementById('fullNameError');
    const value = input.value.trim();
    
    const isValid = value.length >= 2;
    updateFieldState(input, error, isValid, '–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞');
    
    return isValid;
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è email
function validateEmail() {
    const input = document.getElementById('email');
    const error = document.getElementById('emailError');
    const value = input.value.trim();
    
    const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    const isValid = emailPattern.test(value);
    updateFieldState(input, error, isValid, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email');
    
    return isValid;
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
function validatePhone() {
    const input = document.getElementById('phone');
    const error = document.getElementById('phoneError');
    const value = input.value.trim();
    
    const phonePattern = /^\+7\s?[\(]?\d{3}[\)]?\s?\d{3}[\-]?\d{2}[\-]?\d{2}$/;
    const isValid = phonePattern.test(value);
    updateFieldState(input, error, isValid, '–§–æ—Ä–º–∞—Ç: +7 (999) 123-45-67');
    
    return isValid;
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–æ–ª—è
function validatePassword() {
    const input = document.getElementById('password');
    const error = document.getElementById('passwordError');
    const value = input.value;
    
    const hasMinLength = value.length >= 8;
    const hasLetter = /[a-zA-Z]/.test(value);
    const hasNumber = /\d/.test(value);
    const isValid = hasMinLength && hasLetter && hasNumber;
    
    updateFieldState(input, error, isValid, '–ú–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤, –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã');
    
    return isValid;
}

// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è
function validateConfirmPass() {
    const input = document.getElementById('confirmPassword');
    const error = document.getElementById('confirmPasswordError');
    const password = document.getElementById('password').value;
    const confirm = input.value;
    
    const isValid = password === confirm && password.length > 0;
    updateFieldState(input, error, isValid, '–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç');
    
    return isValid;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–±–æ—Ä–∞ –∫—É—Ä—Å–∞
function validateCourse() {
    const error = document.getElementById('courseError');
    const selected = document.querySelector('input[name="course"]:checked');
    const isValid = !!selected;
    
    if (error) {
        if (!isValid) {
            error.textContent = '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—É—á–µ–Ω–∏—è';
            error.classList.add('show');
        } else {
            error.classList.remove('show');
        }
    }
    
    return isValid;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è
function validateBirthDate() {
    const input = document.getElementById('birthDate');
    const error = document.getElementById('birthDateError');
    const value = input.value;
    
    if (!value) return true; // –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ
    
    const birthDate = new Date(value);
    const minDate = new Date();
    minDate.setFullYear(minDate.getFullYear() - 14);
    const isValid = birthDate <= minDate;
    
    updateFieldState(input, error, isValid, '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç - 14 –ª–µ—Ç');
    
    return isValid;
}

// –°–æ–≥–ª–∞—à–µ–Ω–∏–µ
function validateAgreement() {
    const error = document.getElementById('agreementError');
    const checkbox = document.querySelector('input[name="agreement"]');
    const isValid = checkbox ? checkbox.checked : false;
    
    if (error) {
        if (!isValid) {
            error.textContent = '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ';
            error.classList.add('show');
        } else {
            error.classList.remove('show');
        }
    }
    
    return isValid;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—è
function updateFieldState(field, errorElement, isValid, errorMessage) {
    if (!field) return;
    
    // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∫–ª–∞—Å—Å—ã
    field.classList.remove('correct', 'wrong');
    
    if (field.value.trim() === '') {
        // –ü–æ–ª–µ –ø—É—Å—Ç–æ–µ - –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    } else if (isValid) {
        field.classList.add('correct');
    } else {
        field.classList.add('wrong');
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    if (errorElement) {
        if (!isValid && field.value.trim() !== '') {
            errorElement.textContent = errorMessage;
            errorElement.classList.add('show');
        } else {
            errorElement.classList.remove('show');
        }
    }
}

// –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª—è
function updatePassMeter() {
    const meter = document.getElementById('passwordStrength');
    const password = document.getElementById('password').value;
    
    if (!meter) return;
    
    if (!password) {
        meter.className = 'meter-fill';
        return;
    }
    
    let strength = 'low';
    if (password.length >= 12 && /[!@#$%^&*]/.test(password)) {
        strength = 'high';
    } else if (password.length >= 8) {
        strength = 'medium';
    }
    
    meter.className = `meter-fill ${strength}`;
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª—è
function setupPassToggle() {
    const toggleBtns = document.querySelectorAll('.eye-toggle');
    
    toggleBtns.forEach(btn => {
        btn.addEventListener('click', function(e) {
            const wrapper = e.target.closest('.password-wrapper');
            if (!wrapper) return;
            
            const input = wrapper.querySelector('input');
            if (!input) return;
            
            // –ú–µ–Ω—è–µ–º —Ç–∏–ø –ø–æ–ª—è
            if (input.type === 'password') {
                input.type = 'text';
                e.target.textContent = 'üëÅÔ∏è‚Äçüó®Ô∏è';
            } else {
                input.type = 'password';
                e.target.textContent = 'üëÅÔ∏è';
            }
        });
    });
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
function formatPhoneInput(e) {
    const input = e.target;
    let numbers = input.value.replace(/\D/g, '');
    
    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –Ω–∞—á–∞–ª–æ –Ω–æ–º–µ—Ä–∞
    if (numbers.startsWith('7')) {
        numbers = '+7' + numbers.substring(1);
    } else if (numbers.startsWith('8')) {
        numbers = '+7' + numbers.substring(1);
    } else if (!numbers.startsWith('+7')) {
        numbers = '+7' + numbers;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    if (numbers.length > 2) {
        numbers = numbers.substring(0, 2) + ' (' + numbers.substring(2);
    }
    if (numbers.length > 7) {
        numbers = numbers.substring(0, 7) + ') ' + numbers.substring(7);
    }
    if (numbers.length > 12) {
        numbers = numbers.substring(0, 12) + '-' + numbers.substring(12);
    }
    if (numbers.length > 15) {
        numbers = numbers.substring(0, 15) + '-' + numbers.substring(15);
    }
    
    input.value = numbers;
}

// –ü–æ–∫–∞–∑–∞—Ç—å —É—Å–ø–µ—Ö
function showSuccessState() {
    if (successMsg) {
        successMsg.classList.add('show');
    }
    if (submitBtn) {
        submitBtn.disabled = true;
        submitBtn.textContent = '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!';
    }
}

// –û—Ç–∫–ª—é—á–∏—Ç—å —Ñ–æ—Ä–º—É
function disableForm() {
    const inputs = form.querySelectorAll('input, select, textarea, button');
    inputs.forEach(input => {
        input.disabled = true;
    });
    // –ö–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Å—Ç–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ–π –¥–ª—è –≤–∏–∑—É–∞–ª–∞
    if (submitBtn) {
        submitBtn.disabled = false;
    }
}

// –§–æ–∫—É—Å –Ω–∞ –ø–µ—Ä–≤—É—é –æ—à–∏–±–∫—É
function focusErrorField() {
    const firstError = form.querySelector('.wrong');
    if (firstError) {
        firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
        firstError.focus();
    }
}

// –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ñ–æ—Ä–º—ã
function resetFormState() {
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–ª–∞—Å—Å—ã –ø–æ–ª–µ–π
    const fields = form.querySelectorAll('.text-input, .select-input, .textarea-input');
    fields.forEach(field => {
        field.classList.remove('correct', 'wrong');
    });
    
    // –°–∫—Ä—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö
    const errors = form.querySelectorAll('.problem-text');
    errors.forEach(error => {
        error.classList.remove('show');
    });
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (successMsg) {
        successMsg.classList.remove('show');
    }
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
    if (submitBtn) {
        submitBtn.disabled = false;
        submitBtn.textContent = '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å';
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–∞—Ä–æ–ª—è
    const passMeter = document.getElementById('passwordStrength');
    if (passMeter) {
        passMeter.className = 'meter-fill';
    }
    
    // –í–∫–ª—é—á–∞–µ–º –≤—Å–µ –ø–æ–ª—è –æ–±—Ä–∞—Ç–Ω–æ
    const inputs = form.querySelectorAll('input, select, textarea, button');
    inputs.forEach(input => {
        input.disabled = false;
    });
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', initForm);